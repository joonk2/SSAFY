문제 3-1


본 식은 내림차순을 구현한 것이다

1. (j == 0)
a[0] < a[1]이 2 < 7 성립하므로 a[0], a[1] = a[1], a[0] 교환

2. (j == 1)
a[1] < a[2]이 2 < 1  성립하지 않으므로 패스

3. (j == 2)
a[2] < a[3]이  1 < 4 성립하므로 a[2], a[3] = a[3], a[2] 교환

4. (j == 3)
a[3] < a[4]이 1 < 3 성립하므로 a[3], a[4] = a[4], a[3]

이런 과정으로 총 25번 연산을 통해 비교하며 내림차순 배열을 형성한다
결과는 다음과 같다
a = [7, 4, 3, 2, 1]






문제 3-2

- 해당정렬은 버블정렬로 장점은 sort 내장메소드 보다 연산속도가 빠르긴 하나,
단점으로는 O=(n^2) 이라는 장시간의 시간복잡도로 인해 다른 대안 ex)
계수 정렬이 있다면 버블정렬은 크게 선호되지 않는다.


